buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'

jar {
	baseName = 'service'
	version = '1.0.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
    maven { 
    	url "http://m2.neo4j.org/content/repositories/releases"
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}
dependencies {
	compile('org.springframework.boot:spring-boot-starter-parent:1.3.0.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-aop')
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-websocket')
    compile("org.springframework.boot:spring-boot-starter-jetty:1.3.1.RELEASE")
    compile("org.springframework:spring-context")
    compile("org.springframework:spring-tx")
    compile("org.springframework.data:spring-data-neo4j")
    //compile("org.springframework.data:spring-data-neo4j:3.3.2.RELEASE")
    //compile("org.springframework.data:spring-data-neo4j-rest:3.3.0.RELEASE")
    //compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.hibernate:hibernate-validator")
    compile("javax.el:javax.el-api:2.2.4")
    compile("org.webjars:angularjs:1.3.8")
    compile("org.webjars:bootstrap:3.2.0")
    compile("org.webjars:jquery:2.1.1")
    compile("org.springframework.boot:spring-boot-devtools")
    compile files('lib/ann.jar')
    compile('org.apache.commons:commons-email:1.1')
    compile('org.apache.poi:poi:3.9')
    compile('com.itextpdf:itextpdf:5.5.7')
    compile files('lib/org.eclipse.core.resources_3.10.1.v20150725-1910.jar')
	compile files('lib/org.eclipse.core.runtime_3.11.1.v20150903-1804.jar')
	compile files('lib/org.eclipse.osgi_3.10.101.v20150820-1432.jar')
	compile files('lib/org.eclipse.equinox.common_3.7.0.v20150402-1709.jar')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile files("C:/Users/sdulger/Desktop/tools/jdk1.8.0_45/lib/tools.jar")
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.1'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/C:/templateproject")
            pom.version = '1.0Maven'
            pom.artifactId = 'newservice'
        }
    }
}
